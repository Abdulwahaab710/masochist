---
title: Causes presentations
tags: rails git javascript sass jasmine causes compass prolog gerrit submodules
cache_breaker: 1
---
Over the last year and a half at [[Causes]] I've given a number of tech and lightning talks. I've just spent some time putting them online under my "work" [[GitHub]] profile, https://github.com/ghurrell (my other profile containing non-work projects is https://github.com/wincent).

'''Update:''' ''Since writing this posted I've consolidated those GitHub accounts into [https://github.com/wincent one]. The links below are therefore out of date, but the repos can all be found [https://github.com/wincent?tab=repositories in the consolidated account].

In roughly reverse chronological order, they are:

* http://ghurrell.github.com/git-filter-branch-lightning-talk/ ("How to open-source your repo without open-sourcing your repo"; describes how to automatically maintain an [[open source]] fork of a subset of an otherwise closed repo using `git-filter-branch` and friends; [https://github.com/ghurrell/git-filter-branch-lightning-talk source])
* http://ghurrell.github.com/migrating-rails-with-a-large-codebase-presentation/ (story of how we went from Rails 2.1.0 to the latest Rails 3.2.x in a large codebase; [http://www.youtube.com/watch?v=qgCM2bca49w YouTube video]; [https://github.com/ghurrell/migrating-rails-with-a-large-codebase-presentation source])
* http://ghurrell.github.com/testable-js-lightning-talk/ (on how to architect [[JavaScript]] for testability; [https://github.com/ghurrell/testable-js-lightning-talk source])
* http://peaceful-journey-2015.herokuapp.com/ (Compass lightning talk demo, actually a micro-app; [https://github.com/ghurrell/compass-lightning-talk source])  
* http://ghurrell.github.com/rails-3-lightning-talk/ (a lightning talk on view escaping in Rails 3; [https://github.com/ghurrell/rails-3-lightning-talk source])
* http://ghurrell.github.com/seven-languages-prolog-tech-talk (the week I led in our "Seven Languages in Seven Weeks" reading group, Prolog; [https://github.com/ghurrell/seven-languages-prolog-tech-talk demo code])
* http://ghurrell.github.com/gerrit-best-practices-tech-talk (a follow-up on how to get the most out of Gerrit)
* http://ghurrell.github.com/gerrit-intro-tech-talk (an intro for the team made when we started using [[Gerrit]] for code review)
* http://ghurrell.github.com/git-submodules-tech-talk (this one also covers some Git fundamentals)
