---
tags: perl perl.one.liners
---
I recently needed to change all the occurrences of a string in a number of files. The following [[perl one-liner]]:

* Makes backups of all of the files specified by the pattern, <tt>files*</tt>
* Names the backups with a <tt>.bak</tt> extension
* Searches for the string <tt>find</tt>
* Replaces each match with the string <tt>replace</tt>

<pre>perl -i.bak -p -e 's/find/replace/g' files*</pre>

Note that you can also just read from standard in and write to standard out, and if you need to specify multiple find/replacement pairs at once:

<pre>cat input | perl -pe 's/find/replace/g; s/another/foo/g' > output</pre>

= Example =

In moving to [[SVK]] I needed to find a replacement for [[Subversion externals]] (see "[[Working around the lack of svn:externals support in SVK]]"). Let's take the example of moving the [[WOCommon]] external from inside the [[Synergy Advance]] source root:

<pre>${SOURCE_ROOT}/WOCommon</pre>

To outside of it:

<pre>${SOURCE_ROOT}/../WOCommon</pre>

First I needed to find all references in the project file. I started with those preceded by a slash:

<pre>cd SynergyAdvance.xcodeproj
grep '/WOCommon' project.pbxproj</pre>

This yielded two results, one a reference to the <tt>WOCommon.xcodeproj</tt> file:

<pre>BC0CEBDA0AC32E0400434EC2 /* WOCommon.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = WOCommon.xcodeproj; path = ../../WOCommon/tiger/WOCommon.xcodeproj; sourceTree = SOURCE_ROOT; };</pre>

Note that this is a reference to the original project file, not the one in the Subversion external. This must be changed to point to the separately checked out copy.

The other result was a shell script which had numerous references of the form <tt>"${SOURCE_ROOT}/WOCommon/..."</tt>.

The first I could handle with:

<pre>perl -i -p -e 's#\.\./\.\./WOCommon/tiger#../WOCommon#' project.pbxproj
svk diff # visually inspect the change</pre>

Then the second:

<pre>perl -i -p -e 's#\$\{SOURCE_ROOT\}/WOCommon#\${SOURCE_ROOT}/../WOCommon#g' project.pbxproj
svk diff</pre>

The next step was to find all occurrences of <tt>WOCommon</tt> followed by a slash (280 lines found):

<pre>grep 'WOCommon/' project.pbxproj</pre>

We basically want to change all such instances except for those which are preceded by a slash (those we've already handled above).

<pre>perl -i -p -e 's#(?<!/)WOCommon/#../WOCommon/#g' project.pbxproj
svk diff</pre>

Finally, check for <tt>WOCommon</tt> neither preceded nor followed by a slash:

<pre>perl -nle 'print if /(?<!\/)WOCommon(?!\/)/' project.pbxproj</pre>

On opening the modified [[Xcode]] project everything seemed to be intact; the only thing broken was a single folder reference that had to be updated. Evidently I had overlooked the following in my last check:

<pre>BC0CEBFD0AC33D3D00434EC2 /* WOCommon */ = {isa = PBXFileReference; lastKnownFileType = folder; path = WOCommon; sourceTree = "<group>"; };</pre>

Finally I had to add <tt>"$(SOURCE_ROOT)/.."</tt> to my <tt>HEADER_SEARCH_PATHS</tt> so as to be able to find the relocated shared files.
