---
tags: rspec rails watir
---
= Installation =

See:

* [[Installing SafariWatir on Mac OS X Tiger]]
* [[Installing Spec::UI 0.2.0 on Mac OS X Tiger]]; or
* [[Upgrading to Spec::UI 0.2.2 on Mac OS X Tiger]]

For the latest installation or upgrade notes, see the "[[:Category:RSpec upgrades|RSpec upgrades]]" category.

= Other setup =

There are is no official documentation for setting up and using [[Spec::UI]] at this time, but [[Aslak Hellesoy]] posted [http://rubyforge.org/pipermail/rspec-users/2007-May/001541.html these instructions] to the [[RSpec users]] mailing list describing the necessary steps.

Similar instructions can also be found [http://www.practicalguile.com/articles/ruby/rspec-your-functional-tests/ here].

== [[Rakefile]] changes ==

<pre>require 'spec/rake/spectask'

desc "Run in-browser specs"
Spec::Rake::SpecTask.new('spec:ui') do |t|
  t.spec_files = FileList['spec/**/*.rb']
  t.spec_opts = [
    '--require', 'spec/spec_helper',
    '--format', 'Spec::Ui::ScreenshotFormatter:spec_report.html',
    '--format', 'progress',
  ]
end</pre>

== <tt>spec_helper.rb</tt> changes ==

<pre>Spec::Runner.configure do |config|
 config.include Spec::Matchers::Watir
end</pre>

== <tt>before</tt> and <tt>after</tt> blocks ==

All [[specs]] will require some special set-up and tear-down:

<pre>before(:all) do
  @browser = Watir::Browser.new
end

after(:each) do
  # needed for screenshots to work
  Spec::Ui::ScreenshotFormatter.browser = @browser
end

after(:all) do
  @browser.kill! rescue nil
end</pre>

= See also =

* An excellent article on using [[Watir]], [[RSpec]] and [[Rails]]: http://www.practicalguile.com/articles/ruby/rspec-your-functional-tests/
* [[Behaviour-Driven Development with Rails]]
