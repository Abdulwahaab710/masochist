---
tags: gpg
---
= Export a public key =

<pre lang="shell">$ gpg --export -a win@wincent.com</pre>

Sample output [/snippets/122 here].

= List info about keys in the keyring =

== Public keys ==

<pre lang="shell">$ gpg --list-public-keys</pre>

== Private keys ==

<pre lang="shell">$ gpg --list-secret-keys</pre>

= List fingerprint info about keys in keyring =

<pre lang="shell">$ gpg --fingerprint</pre>

= Deleting keys from a keyring =

== Deleting a private key ==

'''Note''': This is generally something you'd want to do with extreme caution.

<pre lang="shell">$ gpg --delete-secret-key "John Tester <john@example.com>"</pre>

== Deleting a public key ==

<pre lang="shell">$ gpg --delete-key "John Tester <john@example.com>"</pre>

= Uploading a public key to a key server =

== Uploading to a specific server ==

Here the "key ID" is the one you can find in the output of `gpg --list-keys`, prefixed with `0x`:

<pre lang="shell">$ gpg --keyserver pgp.mit.edu --send-keys 0x134D9429
gpg: sending key 134D9429 to hkp server pgp.mit.edu</pre>

== Letting `gpg` choose a default server ==

<pre lang="shell">$ gpg --send-keys 0x134D9429
gpg: sending key 134D9429 to hkp server keys.gnupg.net</pre>

== Further reading on key servers ==

* http://pgp.mit.edu/faq.html

= Importing a key from a key server = 

<pre lang="shell">$ gpg --keyserver pgp.mit.edu --recv-keys 0x134D9429 
gpg: requesting key 134D9429 from hkp server pgp.mit.edu
gpg: key 134D9429: "Wincent Colaiuta <win@wincent.com>" not changed
gpg: Total number processed: 1
gpg:              unchanged: 1</pre>

= Setting preferences on an existing key in the key ring =

(As described [http://www.apache.org/dev/openpgp.html#sha1 here].)

<pre lang="shell">$ gpg --edit-key 134D9429
gpg> showpref
gpg> setpref SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP gpg> save
$ gpg --send-keys 134D9429 # upload new public key to keyserver</pre>

= Generate revocation certificates =

<pre lang="shell">$ gpg --output revoke-37BAF280.asc --armor --gen-revoke 37BAF280
$ gpg --output revoke-134D9429.asc --armor --gen-revoke 134D9429
$ gpg -c revoke-134D9429.asc # encrypt revocation cert
$ gpg -c revoke-37BAF280.asc # encrypt revocation cert
$ rm revoke-*.asc            # destroy plaintext (use `srm` if you have it)
$ chmod 400 revoke-*         # ideally, should move certs "offsite" to secure location</pre>

= Transitioning from an older key to a newer key =

For example, to change key length, or because a key's expiry is approaching. See [http://www.apache.org/dev/key-transition.html this page] for great detail on the subject.

We'll generate a new key, set its trust to "ultimate", set it as our default, and sign the new key with the old.

<pre lang="shell">$ gpg --gen-key                                  # generate new key
$ gpg --edit-key 37BAF280                        # trust, showprefs
$ vim ~/.gnupg/gpg.conf                          # set default-key to 37BAF280
$ gpg --default-key 1BD985E7 --sign-key 37BAF280 # sign new with old
$ gpg --list-sigs 134D9429 37BAF280              # confirm sigs
$ gpg --send-keys 134D9429 37BAF280              # send both keys to server</pre>

= Changing the password on an existing private key =

<pre lang="shell">$ gpg --edit-key user@example.com # at prompt: `passwd`, then `quit`</pre>

= See also =

* Another cheat sheet: http://irtfweb.ifa.hawaii.edu/~lockhart/gpg/gpg-cs.html
